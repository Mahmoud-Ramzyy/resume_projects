function code_word=Huff_Dic(prob,col)
 %in our image the first 10 symbols only have a prob
prob=prob(1:col); %but in general case col should be =256
path = zeros(col); %to track the path of each symbol
his = zeros(col,4); %as a memory for prev symbols
%his(:,5)=prob; % the 5th col is a ref version of probs
path(:,:)=2; %give its indices any value except 0,1 for indication
no_stages=col-2; %no of required stages till having r=2 symblos
no_bits=1; 
while col>2^no_bits
    no_bits=no_bits+1;
end         %4 bits to represent 10 symbols-->(2^4=16>10)


for i=0:no_stages
    r1=col-i;
    r2=col-i-1;
    r3=col-i-2;
    
    prob(r2)=prob(r1)+prob(r2); %sum the last r sym probs
    sum=prob(r2);
    prob(r1)=0;
    prob=sort(prob,'descend'); %arrange the new vector again    
    %assign 0&1 for code word and tracking
    [~,c1]=find(path(r1,:)==2,1,'last');
    [~,c2]=find(path(r2,:)==2,1,'last');
    [~,index]=find(prob==sum,1); %find the first index of new prob value
    
    if i==0
        path(r1,c1)=1;
        path(r2,c2)=0;
        %load the history:
        his(r1,1)=r1; %reserve first col for row number
        his(r2,1)=r2;
        his(r2:r1,2)=c1; %%reserve second col for col number =c2
        his(r2:r1,3)=sum; %reserve  third col for the new prob value
         %that results from the last 2 probs
        his(r2:r1,4)=index;  %reserve 4th col for the new index
        
    else
        his(r2,1)=r2; %load the next row in history
        his(r2,2)=c2;
        his(r2,3)=sum;
        his(r2,4)=index;
        if prob(r2)<his(r1,3)
            path(r2,c2)=0;  %was=1
           % path(r1,c1)=1; %%

        elseif  prob(r2)==his(r1,3)
            path (r2,c2)=1;
            path(r1-1:r1,c1)=0;
            his(r1-1:r1,2)=c1;%update history
            his(r1-1:r1,3)=sum;
            his(r1-1:r1,4)=index;
        else
            path (r2,c2)=0;
            path(r1-1:r1,c1)=1;
            his(r1-1:r1,2)=c1;%update history
            his(r1-1:r1,3)=sum;
            his(r1-1:r1,4)=index;
        end
        for j=2:col
            if his(j,1)~=0
                row=his(j,1);
                c3=his(j,2)-1;
                value=his(j,3);
                [~,ind]=find(prob(1,:)==value,1,'last');
                %check if the index has left its pos
                if ind~=1
                    if value~=prob(his(j,4)) || value==prob(ind-1)
                        
                        check=isempty(ind); %check if prob exists anymore or not
                        if check==0 %still exists
                            his(j,4)=ind; %update the index
                            if ind==r2 %check if the new pos at before last index
                                path(row,c3)=0;
                                his(j,3)=prob(r1); %last prob
                                his(j,4)=r1;
                                his(j,2)=c3;
                            elseif ind==r1  %check if the new pos at last index
                                path(row,c3)=1;
                                his(j,3)=prob(r1); %last prob
                                his(j,4)=r1;
                                his(j,2)=c3;
                            end
                        else %vanished
                            path(row,c3)=1;
                            his(j,3)=prob(r1); %last prob
                            his(j,4)=r1;
                            his(j,2)=c3;
                        end
                        
                    end
                end
            end
        end
        
    end

            
            
      
code_word=path(:,col-no_bits:end); %take the last 4 cols 

end